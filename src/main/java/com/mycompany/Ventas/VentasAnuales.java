/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.Ventas;

import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.colors.DeviceRgb;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Style;
import com.itextpdf.layout.borders.SolidBorder;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.HorizontalAlignment;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import com.mongodb.client.FindIterable;
import com.mongodb.client.model.Filters;
import com.mycompany.concesionariongg.Conexion.Conexion;
import java.awt.Color;
import static java.awt.Component.CENTER_ALIGNMENT;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.Document;
import org.bson.conversions.Bson;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author nesto
 */
public class VentasAnuales extends javax.swing.JFrame {

    Conexion conexion = new Conexion();
    DefaultTableModel tabla = new DefaultTableModel();
    int sumaCantidades2022 = 0;
    int sumaCantidades2023 = 0;
    int sumaCantidades2024 = 0;

    public VentasAnuales() {

        initComponents();
        //Establecemos el titulo de la ventana
        setTitle("CONCESIONARIO NGG");
        //Cambiamos el color del fondo de la ventana
        getContentPane().setBackground(new Color(128, 0, 128));
        //Cambiamos el color del fondo del jpanel
        jPanel1.setBackground(new Color(128, 0, 128));
        //Decoramos los botones
        jButtonVolver.setFont(new Font("Arial", Font.BOLD, 12));
        jButtonVolver.setBackground(Color.WHITE);
        jButtonPDF.setFont(new Font("Arial", Font.BOLD, 12));
        jButtonPDF.setBackground(Color.WHITE);
        //Seleccionar el tamaño de la ventana
        setPreferredSize(new Dimension(780, 850));

        //Añadir box layout para el panel
        jPanel1.setLayout(new BoxLayout(jPanel1, BoxLayout.Y_AXIS));

        //Añadir titulo
        jLabelTitulo.setText("ConcesionarioNGG:Informe Ventas Anuales");
        jLabelTitulo.setFont(new Font("Arial", Font.BOLD, 20));
        jLabelTitulo.setForeground(Color.WHITE);
        jLabelTitulo.setAlignmentX(CENTER_ALIGNMENT);
        jPanel1.add(jLabelTitulo);

        //Añadir parrafo
        jLabelParrafo.setText("A continuacion puede consultar las ventas anuales de los ultimos años");
        jLabelParrafo.setFont(new Font("Arial", Font.BOLD, 14));
        jPanel1.add(Box.createVerticalStrut(60));
        jLabelParrafo.setAlignmentX(CENTER_ALIGNMENT);
        jLabelParrafo.setForeground(Color.WHITE);
        jLabelParrafo.setAlignmentX(CENTER_ALIGNMENT);
        jPanel1.add(jLabelParrafo);

        //Añadir Tabla
        crearTabla();
        jTableVentas.setAlignmentX(CENTER_ALIGNMENT);
        jTableVentas.setFont(new Font("Arial", Font.BOLD, 12));
        jPanel1.add(jTableVentas);

        //Añadir grafico
        generarGrafico();

        //Añadir bordes al panel para centrarlo
        jPanel1.setBorder(BorderFactory.createEmptyBorder(70, 140, 70, 140));

        //Colocar ventana en el centro del pantalla
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelParrafo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVentas = new javax.swing.JTable();
        jButtonVolver = new javax.swing.JButton();
        jButtonPDF = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableVentas);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(401, 401, 401)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelParrafo)
                            .addComponent(jLabelTitulo)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(199, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(jLabelTitulo)
                .addGap(30, 30, 30)
                .addComponent(jLabelParrafo)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(175, Short.MAX_VALUE))
        );

        jButtonVolver.setText("Volver");
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });

        jButtonPDF.setText("PDF");
        jButtonPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPDFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButtonVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonPDF)
                .addGap(39, 39, 39))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVolver)
                    .addComponent(jButtonPDF))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        // TODO add your handling code here:
        VentasInicio newframe = new VentasInicio();

        newframe.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jButtonPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPDFActionPerformed

        try {
            generarPdf();
            JOptionPane.showMessageDialog(this, "El Pdf se ha creado correctamente.", "Warning", JOptionPane.WARNING_MESSAGE);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonPDFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentasAnuales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentasAnuales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentasAnuales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentasAnuales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentasAnuales().setVisible(true);
            }
        });
    }

    private void crearTabla() {
        //Filtros para sacar los datos de cada año
        LocalDate fechaInicial2022 = LocalDate.of(2022, 1, 1);
        LocalDate fechaFinal2022 = LocalDate.of(2022, 12, 31);
        Bson query2022 = Filters.and(
                Filters.gte("fecha", fechaInicial2022),
                Filters.lt("fecha", fechaFinal2022));
        conexion.col_Ventas.find(query2022);
        FindIterable<Document> resultado2022 = conexion.col_Ventas.find(query2022);
        for (Document doc : resultado2022) {
            int cantidad = doc.getInteger("cantidad");
            sumaCantidades2022 += cantidad;
        }

        LocalDate fechaInicial2023 = LocalDate.of(2023, 1, 1);
        LocalDate fechaFinal2023 = LocalDate.of(2023, 12, 31);
        Bson query2023 = Filters.and(
                Filters.gte("fecha", fechaInicial2023),
                Filters.lt("fecha", fechaFinal2023));
        conexion.col_Ventas.find(query2023);
        FindIterable<Document> resultado2023 = conexion.col_Ventas.find(query2023);
        for (Document doc : resultado2023) {
            int cantidad = doc.getInteger("cantidad");
            sumaCantidades2023 += cantidad;
        }

        LocalDate fechaInicial2024 = LocalDate.of(2024, 1, 1);
        LocalDate fechaFinal2024 = LocalDate.of(2024, 12, 31);
        Bson query2024 = Filters.and(
                Filters.gte("fecha", fechaInicial2024),
                Filters.lt("fecha", fechaFinal2024));
        conexion.col_Ventas.find(query2024);
        FindIterable<Document> resultado2024 = conexion.col_Ventas.find(query2024);
        for (Document doc : resultado2024) {
            int cantidad = doc.getInteger("cantidad");
            sumaCantidades2024 += cantidad;
        }

        //Añadimos las columnas de la tabla
        String[] columnas = {"Años", "Ventas"};
        tabla.setColumnIdentifiers(columnas);

        //Añadimos las filas de la tabla
        Object[][] datos = {
            {"2022", sumaCantidades2022},
            {"2023", sumaCantidades2023},
            {"2024", sumaCantidades2024}
        };
        for (Object[] fila : datos) {
            tabla.addRow(fila);
        }

        jTableVentas.setModel(tabla);
        jPanel1.add(Box.createVerticalStrut(60));
    }

    private void generarGrafico() {
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        datos.addValue(sumaCantidades2022, "Año", "2022");
        datos.addValue(sumaCantidades2023, "Año", "2023");
        datos.addValue(sumaCantidades2024, "Año", "2024");

        // Crear gráfico con los datos
        JFreeChart chart = ChartFactory.createBarChart(
                "Ventas por Año", // Título
                "Año", // eje X
                "Ventas", // eje Y
                datos // datos
        );

        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(180, 180));
        jPanel1.add(chartPanel);
        jPanel1.add(Box.createVerticalStrut(60));

    }

    private void generarPdf() throws IOException {
        String archivo = "C:/Users/nesto/Desktop/InformeVentasAnuales.pdf";
        String titulos = "CONCESIONARIOS NGG:Informe Ventas Anuales";
        String parrafo = "A continuacion se puede comprobar el registro de ventas anuales realizado por la empresa ConesionarioNGG.Este documento contiene informacion privada,por lo tanto queda totalmente prohibido ser compartido,excepto con fines empresariales.";
        try {
            //Creamos el escritor del pdf
            PdfWriter writer = new PdfWriter(archivo);
            //Creamos el documento con formato pdf
            PdfDocument pdf = new PdfDocument(writer);
            //Le damos el formato al documento
            com.itextpdf.layout.Document documento = new com.itextpdf.layout.Document(pdf);

            // Agregar título
            Style estiloTitulo = new Style();
            estiloTitulo.setFontSize(22).setBold().setTextAlignment(TextAlignment.CENTER);
            Paragraph titulo = new Paragraph(titulos).addStyle(estiloTitulo.setBorderBottom(new SolidBorder(new DeviceRgb(0, 0, 0), 1)));
            documento.add(titulo);

            // Agregar un párrafo
            Style estiloParrafo = new Style();
            estiloParrafo.setFontSize(10);
            Paragraph parrafos = new Paragraph(parrafo).addStyle(estiloParrafo).setTextAlignment(TextAlignment.JUSTIFIED).setMarginBottom(30);
            documento.add(parrafos);

            // Crear tabla en PDF
            Table tablaPdf = new Table(UnitValue.createPercentArray(new float[]{1, 1}));
            tablaPdf.addCell("AÑOS").setBold().setFontSize(18);
            tablaPdf.addCell("VENTAS").setBold().setFontSize(18);
            for (int i = 0; i < tabla.getRowCount(); i++) {
                tablaPdf.addCell((String) tabla.getValueAt(i, 0)).setFontSize(12);
                tablaPdf.addCell(tabla.getValueAt(i, 1).toString()).setFontSize(12);
            }

            tablaPdf.setHorizontalAlignment(HorizontalAlignment.CENTER).setMarginBottom(30);
            documento.add(tablaPdf);

            DefaultCategoryDataset datos = new DefaultCategoryDataset();
            datos.addValue(sumaCantidades2022, "Año", "2022");
            datos.addValue(sumaCantidades2023, "Año", "2023");
            datos.addValue(sumaCantidades2024, "Año", "2024");

            // Crear gráfico con tosoa los datos
            JFreeChart chart = ChartFactory.createBarChart(
                    "Ventas por Año", // Título
                    "Año", // eje X
                    "Ventas", // eje Y
                    datos // datos
            );
            //Dibujamos la imagen del grafico
            BufferedImage bufferedImage = chart.createBufferedImage(240, 240);
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ImageIO.write(bufferedImage, "png", baos);
            byte[] imageBytes = baos.toByteArray();
            ImageData imageData = ImageDataFactory.create(imageBytes);
            com.itextpdf.layout.element.Image chartImage = new com.itextpdf.layout.element.Image(imageData);
            chartImage.setHorizontalAlignment(HorizontalAlignment.CENTER).setMarginBottom(30);
            documento.add(chartImage);

            //Añadir Fechay hora del documento
            LocalDate fecha = LocalDate.now();
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            String fechaformato = fecha.format(formato);
            LocalTime hora = LocalTime.now();
            DateTimeFormatter formatoh = DateTimeFormatter.ofPattern("HH:mm");
            String horaformato = hora.format(formatoh);

            Paragraph fechayhora = new Paragraph("Valencia," + fechaformato + " a las " + horaformato + " horas.").setFontSize(10).setTextAlignment(TextAlignment.RIGHT).setMarginTop(15);
            documento.add(fechayhora);

            //Cerramos y creamos el documento
            documento.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPDF;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JLabel jLabelParrafo;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableVentas;
    // End of variables declaration//GEN-END:variables
}
